in:
  type: file
  path_prefix: {{ env.CD_FETCHED }}/module_completion_requirement_dim
  decoders:
  - {type: gzip}
  parser:
    charset: UTF-8
    newline: LF
    type: csv
    delimiter: "\t"
    quote: null
    quotes_in_quoted_fields: ACCEPT_STRAY_QUOTES_ASSUMING_NO_DELIMITERS_IN_FIELDS
    escape: '"'
    null_string: \N
    trim_if_not_quoted: false
    skip_header_lines: 0
    allow_extra_columns: false
    allow_optional_columns: false
    columns:
    - {name: id, type: long}
    - {name: module_id, type: long}
    - {name: module_item_id, type: long}
    - {name: requirement_type, type: string}
out:
  type: postgresql
  host: {{ env.EMBULK_POSTGRESH }}
  port: {{ env.EMBULK_POSTGRESHP }}
  user: {{ env.EMBULK_POSTGRESU }}
  password: {{ env.EMBULK_POSTGRESP }}
  database: {{ env.EMBULK_POSTGRESDB }}
  default_timezone: {{ env.EMBULK_TZ }}
  table: module_completion_requirement_dim
  mode: replace
  insert_method: native
  column_options:
    id: {type: 'BIGINT NOT NULL PRIMARY KEY'}
    module_id: {type: 'BIGINT NULL'}
    module_item_id: {type: 'BIGINT NULL'}
    requirement_type: {type: 'VARCHAR(256) NULL'}
  after_load: |
    ALTER TABLE "module_completion_requirement_dim" ADD CONSTRAINT "CK_module_completion_requirement_dim_requirement_type" CHECK ("requirement_type" IN ('min_score', 'must_contribute', 'must_mark_done', 'must_submit', 'must_view'));
    CREATE INDEX "module_completion_requirement_dim_idx_module_id" ON "module_completion_requirement_dim" ("module_id");
    CREATE INDEX "module_completion_requirement_dim_idx_module_item_id" ON "module_completion_requirement_dim" ("module_item_id");