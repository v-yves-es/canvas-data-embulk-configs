in:
  type: file
  path_prefix: {{ env.CD_FETCHED }}/conversation_dim
  decoders:
  - {type: gzip}
  parser:
    charset: UTF-8
    newline: LF
    type: csv
    delimiter: "\t"
    quote: null
    quotes_in_quoted_fields: ACCEPT_STRAY_QUOTES_ASSUMING_NO_DELIMITERS_IN_FIELDS
    escape: '"'
    null_string: \N
    trim_if_not_quoted: false
    skip_header_lines: 0
    allow_extra_columns: false
    allow_optional_columns: false
    columns:
    - {name: id, type: long}
    - {name: canvas_id, type: long}
    - {name: has_attachments, type: string}
    - {name: has_media_objects, type: string}
    - {name: subject, type: string}
    - {name: course_id, type: long}
    - {name: group_id, type: long}
    - {name: account_id, type: long}
out:
  type: postgresql
  host: {{ env.EMBULK_POSTGRESH }}
  port: {{ env.EMBULK_POSTGRESHP }}
  user: {{ env.EMBULK_POSTGRESU }}
  password: {{ env.EMBULK_POSTGRESP }}
  database: {{ env.EMBULK_POSTGRESDB }}
  default_timezone: {{ env.EMBULK_TZ }}
  table: conversation_dim
  mode: replace
  insert_method: native
  column_options:
    id: {type: 'BIGINT NOT NULL PRIMARY KEY'}
    canvas_id: {type: 'INT NULL'}
    has_attachments: {type: 'VARCHAR(256) NULL'}
    has_media_objects: {type: 'VARCHAR(256) NULL'}
    subject: {type: 'VARCHAR(256) NULL'}
    course_id: {type: 'BIGINT NULL'}
    group_id: {type: 'BIGINT NULL'}
    account_id: {type: 'BIGINT NULL'}
  after_load: |
    ALTER TABLE "conversation_dim" ADD CONSTRAINT "CK_conversation_dim_has_attachments" CHECK ("has_attachments" IN ('true', 'false'));
    ALTER TABLE "conversation_dim" ADD CONSTRAINT "CK_conversation_dim_has_media_objects" CHECK ("has_media_objects" IN ('true', 'false'));
    CREATE INDEX "conversation_dim_idx_course_id" ON "conversation_dim" ("course_id");
    CREATE INDEX "conversation_dim_idx_group_id" ON "conversation_dim" ("group_id");
    CREATE INDEX "conversation_dim_idx_account_id" ON "conversation_dim" ("account_id");